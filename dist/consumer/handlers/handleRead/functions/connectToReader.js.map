{
  "version": 3,
  "sources": ["../../../../../src/consumer/handlers/handleRead/functions/connectToReader.ts"],
  "sourcesContent": ["import * as tcp from \"net\";\n\nconst READER_PORT: number = parseInt(process.env.READER_PORT || \"0\", 10);\nconst IP: string = process.env.IP || \"127.0.0.1\";\n\n/**\n * \n * @param {tcp.Socket} reader \n * @param {string} filepath \n * @description it sends this json object {\n      read_type: \"single_file\",\n      filepath: filepath,\n    }\n */\nasync function connectToReader(reader: tcp.Socket, filepath: string) {\n  reader.connect(READER_PORT, IP, () => {\n    console.log(`Connected to server: ${IP}:${READER_PORT}`);\n\n    const message = JSON.stringify({\n      read_type: \"single_file\",\n      file_path: filepath,\n    });\n\n    reader.write(message);\n  });\n}\n\nexport { connectToReader };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,MAAM,cAAsB,SAAS,QAAQ,IAAI,eAAe,KAAK,EAAE;AACvE,MAAM,KAAa,QAAQ,IAAI,MAAM;AAWrC,eAAe,gBAAgB,QAAoB,UAAkB;AACnE,SAAO,QAAQ,aAAa,IAAI,MAAM;AACpC,YAAQ,IAAI,wBAAwB,EAAE,IAAI,WAAW,EAAE;AAEvD,UAAM,UAAU,KAAK,UAAU;AAAA,MAC7B,WAAW;AAAA,MACX,WAAW;AAAA,IACb,CAAC;AAED,WAAO,MAAM,OAAO;AAAA,EACtB,CAAC;AACH;",
  "names": []
}
