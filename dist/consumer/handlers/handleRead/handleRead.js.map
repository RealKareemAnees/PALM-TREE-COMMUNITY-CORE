{
  "version": 3,
  "sources": ["../../../../src/consumer/handlers/handleRead/handleRead.ts"],
  "sourcesContent": ["import { Request, Response } from \"express\";\nimport * as tcp from \"net\";\nimport { connectToReader } from \"./functions/connectToReader\";\n\n/**\n *\n * @param req\n * @param res\n * @description this must get the rq and res, the creates a tcp server with the reader then starts piping data to the client\n * @author kareem https://github.com/RealKareemAnees\n */\nasync function handleRead(req: Request, res: Response): Promise<void> {\n  const filepath: string = req.params.filepath; // Assuming filepath is part of the request parameters\n\n  // Extract filename from filepath\n  const filename = filepath.substring(filepath.lastIndexOf(\"/\") + 1);\n\n  const reader = new tcp.Socket();\n  await connectToReader(reader, filepath);\n\n  // streams incoming data from the reader process\n  reader.on(\"data\", async (data) => {\n    if (!res.write(data)) {\n      reader.pause();\n    }\n  });\n\n  // Send progress feedback as response header\n  let totalBytesSent = 0;\n  res.setHeader(\"Content-Disposition\", `attachment; filename=${filename}`);\n\n  res.on(\"drain\", () => {\n    reader.resume();\n  });\n\n  reader.on(\"end\", () => {\n    console.log(\"Connection to server closed\");\n    res.end();\n  });\n\n  // handling exceptions and network errors\n\n  res.on(\"close\", () => {\n    console.log(\"Response closed by the client\");\n    reader.destroy();\n  });\n\n  reader.on(\"close\", () => {\n    console.log(\"Socket closed\");\n    res.end();\n  });\n\n  reader.on(\"timeout\", () => {\n    console.log(\"Socket timed out\");\n    reader.destroy();\n    res.end();\n  });\n\n  reader.on(\"error\", (error) => {\n    console.error(\"Error from the reader:\", error);\n    throw new Error();\n  });\n}\n\nexport { handleRead };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,UAAqB;AACrB,6BAAgC;AAShC,eAAe,WAAW,KAAc,KAA8B;AACpE,QAAM,WAAmB,IAAI,OAAO;AAGpC,QAAM,WAAW,SAAS,UAAU,SAAS,YAAY,GAAG,IAAI,CAAC;AAEjE,QAAM,SAAS,IAAI,IAAI,OAAO;AAC9B,YAAM,wCAAgB,QAAQ,QAAQ;AAGtC,SAAO,GAAG,QAAQ,OAAO,SAAS;AAChC,QAAI,CAAC,IAAI,MAAM,IAAI,GAAG;AACpB,aAAO,MAAM;AAAA,IACf;AAAA,EACF,CAAC;AAGD,MAAI,iBAAiB;AACrB,MAAI,UAAU,uBAAuB,wBAAwB,QAAQ,EAAE;AAEvE,MAAI,GAAG,SAAS,MAAM;AACpB,WAAO,OAAO;AAAA,EAChB,CAAC;AAED,SAAO,GAAG,OAAO,MAAM;AACrB,YAAQ,IAAI,6BAA6B;AACzC,QAAI,IAAI;AAAA,EACV,CAAC;AAID,MAAI,GAAG,SAAS,MAAM;AACpB,YAAQ,IAAI,+BAA+B;AAC3C,WAAO,QAAQ;AAAA,EACjB,CAAC;AAED,SAAO,GAAG,SAAS,MAAM;AACvB,YAAQ,IAAI,eAAe;AAC3B,QAAI,IAAI;AAAA,EACV,CAAC;AAED,SAAO,GAAG,WAAW,MAAM;AACzB,YAAQ,IAAI,kBAAkB;AAC9B,WAAO,QAAQ;AACf,QAAI,IAAI;AAAA,EACV,CAAC;AAED,SAAO,GAAG,SAAS,CAAC,UAAU;AAC5B,YAAQ,MAAM,0BAA0B,KAAK;AAC7C,UAAM,IAAI,MAAM;AAAA,EAClB,CAAC;AACH;",
  "names": []
}
