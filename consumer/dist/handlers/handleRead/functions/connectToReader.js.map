{
  "version": 3,
  "sources": ["../../../../handlers/handleRead/functions/connectToReader.ts"],
  "sourcesContent": ["import * as tcp from \"net\";\nconst READER_PORT = process.env.READER_PORT;\nconst IP: string = process.env.IP || \"127.0.0.1\";\n\n/**\n * \n * @param {tcp.Socket} reader \n * @param {string} filepath \n * @description it sends this json object {\n      read_type: \"single_file\",\n      filepath: filepath,\n    }\n    */\nasync function connectToReader(reader: tcp.Socket, filepath: string) {\n  try {\n    //@ts-ignore\n    reader.connect(process.env.READER_PORT, process.env.IP, () => {\n      console.log(`Connected to server: ${IP}:${process.env.READER_PORT}`);\n\n      const message = JSON.stringify({\n        read_type: \"single_file\",\n        file_path: filepath,\n      });\n\n      reader.write(message);\n    });\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport { connectToReader };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,MAAM,cAAc,QAAQ,IAAI;AAChC,MAAM,KAAa,QAAQ,IAAI,MAAM;AAWrC,eAAe,gBAAgB,QAAoB,UAAkB;AACnE,MAAI;AAEF,WAAO,QAAQ,QAAQ,IAAI,aAAa,QAAQ,IAAI,IAAI,MAAM;AAC5D,cAAQ,IAAI,wBAAwB,EAAE,IAAI,QAAQ,IAAI,WAAW,EAAE;AAEnE,YAAM,UAAU,KAAK,UAAU;AAAA,QAC7B,WAAW;AAAA,QACX,WAAW;AAAA,MACb,CAAC;AAED,aAAO,MAAM,OAAO;AAAA,IACtB,CAAC;AAAA,EACH,SAAS,OAAO;AACd,UAAM,IAAI,MAAM,KAAK;AAAA,EACvB;AACF;",
  "names": []
}
